'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection

Namespace PRSsql.DataAccess
	
	<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="stationInformation")>  _
	Partial Public Class StationInformation
		Inherits System.Data.Linq.DataContext
		
		Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub InsertGasControlLine(instance As GasControlLine)
    End Sub
    Partial Private Sub UpdateGasControlLine(instance As GasControlLine)
    End Sub
    Partial Private Sub DeleteGasControlLine(instance As GasControlLine)
    End Sub
    Partial Private Sub InsertGCLObject(instance As GCLObject)
    End Sub
    Partial Private Sub UpdateGCLObject(instance As GCLObject)
    End Sub
    Partial Private Sub DeleteGCLObject(instance As GCLObject)
    End Sub
    Partial Private Sub InsertPRS(instance As PRS)
    End Sub
    Partial Private Sub UpdatePRS(instance As PRS)
    End Sub
    Partial Private Sub DeletePRS(instance As PRS)
    End Sub
    Partial Private Sub InsertPRSObject(instance As PRSObject)
    End Sub
    Partial Private Sub UpdatePRSObject(instance As PRSObject)
    End Sub
    Partial Private Sub DeletePRSObject(instance As PRSObject)
    End Sub
    #End Region
		
		Public Sub New(ByVal connection As String)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public ReadOnly Property GasControlLines() As System.Data.Linq.Table(Of GasControlLine)
			Get
				Return Me.GetTable(Of GasControlLine)
			End Get
		End Property
		
		Public ReadOnly Property GCLObjects() As System.Data.Linq.Table(Of GCLObject)
			Get
				Return Me.GetTable(Of GCLObject)
			End Get
		End Property
		
		Public ReadOnly Property PRS() As System.Data.Linq.Table(Of PRS)
			Get
				Return Me.GetTable(Of PRS)
			End Get
		End Property
		
		Public ReadOnly Property PRSObjects() As System.Data.Linq.Table(Of PRSObject)
			Get
				Return Me.GetTable(Of PRSObject)
			End Get
		End Property
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute()>  _
	Partial Public Class GasControlLine
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _GasControlLine_Id As Integer
		
		Private _PRSLinkID As System.Nullable(Of Integer)
		
		Private _GasControlLineName As String
		
		Private _PeMin As String
		
		Private _PeMax As String
		
		Private _VolumeVA As String
		
		Private _VolumeVAK As String
		
		Private _PaRangeDM As String
		
		Private _PeRangeDM As String
		
		Private _GCLIdentification As String
		
		Private _InspectionProcedure As String
		
		Private _FSDStart As System.Nullable(Of Short)
		
		Private _GCLCode As String
		
		Private _StatusGCL As Integer
		
		Private _GCLObjects As EntitySet(Of GCLObject)
		
		Private _PRS As EntityRef(Of PRS)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnGasControlLine_IdChanging(value As Integer)
    End Sub
    Partial Private Sub OnGasControlLine_IdChanged()
    End Sub
    Partial Private Sub OnPRSLinkIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRSLinkIDChanged()
    End Sub
    Partial Private Sub OnGasControlLineNameChanging(value As String)
    End Sub
    Partial Private Sub OnGasControlLineNameChanged()
    End Sub
    Partial Private Sub OnPeMinChanging(value As String)
    End Sub
    Partial Private Sub OnPeMinChanged()
    End Sub
    Partial Private Sub OnPeMaxChanging(value As String)
    End Sub
    Partial Private Sub OnPeMaxChanged()
    End Sub
    Partial Private Sub OnVolumeVAChanging(value As String)
    End Sub
    Partial Private Sub OnVolumeVAChanged()
    End Sub
    Partial Private Sub OnVolumeVAKChanging(value As String)
    End Sub
    Partial Private Sub OnVolumeVAKChanged()
    End Sub
    Partial Private Sub OnPaRangeDMChanging(value As String)
    End Sub
    Partial Private Sub OnPaRangeDMChanged()
    End Sub
    Partial Private Sub OnPeRangeDMChanging(value As String)
    End Sub
    Partial Private Sub OnPeRangeDMChanged()
    End Sub
    Partial Private Sub OnGCLIdentificationChanging(value As String)
    End Sub
    Partial Private Sub OnGCLIdentificationChanged()
    End Sub
    Partial Private Sub OnInspectionProcedureChanging(value As String)
    End Sub
    Partial Private Sub OnInspectionProcedureChanged()
    End Sub
    Partial Private Sub OnFSDStartChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnFSDStartChanged()
    End Sub
    Partial Private Sub OnGCLCodeChanging(value As String)
    End Sub
    Partial Private Sub OnGCLCodeChanged()
    End Sub
    Partial Private Sub OnStatusGCLChanging(value As Integer)
    End Sub
    Partial Private Sub OnStatusGCLChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._GCLObjects = New EntitySet(Of GCLObject)(AddressOf Me.attach_GCLObjects, AddressOf Me.detach_GCLObjects)
			Me._PRS = CType(Nothing, EntityRef(Of PRS))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GasControlLine_Id", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property GasControlLine_Id() As Integer
			Get
				Return Me._GasControlLine_Id
			End Get
			Set
				If ((Me._GasControlLine_Id = value)  _
							= false) Then
					Me.OnGasControlLine_IdChanging(value)
					Me.SendPropertyChanging
					Me._GasControlLine_Id = value
					Me.SendPropertyChanged("GasControlLine_Id")
					Me.OnGasControlLine_IdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRSLinkID", DbType:="Int")>  _
		Public Property PRSLinkID() As System.Nullable(Of Integer)
			Get
				Return Me._PRSLinkID
			End Get
			Set
				If (Me._PRSLinkID.Equals(value) = false) Then
					If Me._PRS.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnPRSLinkIDChanging(value)
					Me.SendPropertyChanging
					Me._PRSLinkID = value
					Me.SendPropertyChanged("PRSLinkID")
					Me.OnPRSLinkIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GasControlLineName", DbType:="NVarChar(255)")>  _
		Public Property GasControlLineName() As String
			Get
				Return Me._GasControlLineName
			End Get
			Set
				If (String.Equals(Me._GasControlLineName, value) = false) Then
					Me.OnGasControlLineNameChanging(value)
					Me.SendPropertyChanging
					Me._GasControlLineName = value
					Me.SendPropertyChanged("GasControlLineName")
					Me.OnGasControlLineNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PeMin", DbType:="NVarChar(255)")>  _
		Public Property PeMin() As String
			Get
				Return Me._PeMin
			End Get
			Set
				If (String.Equals(Me._PeMin, value) = false) Then
					Me.OnPeMinChanging(value)
					Me.SendPropertyChanging
					Me._PeMin = value
					Me.SendPropertyChanged("PeMin")
					Me.OnPeMinChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PeMax", DbType:="NVarChar(255)")>  _
		Public Property PeMax() As String
			Get
				Return Me._PeMax
			End Get
			Set
				If (String.Equals(Me._PeMax, value) = false) Then
					Me.OnPeMaxChanging(value)
					Me.SendPropertyChanging
					Me._PeMax = value
					Me.SendPropertyChanged("PeMax")
					Me.OnPeMaxChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VolumeVA", DbType:="NVarChar(255)")>  _
		Public Property VolumeVA() As String
			Get
				Return Me._VolumeVA
			End Get
			Set
				If (String.Equals(Me._VolumeVA, value) = false) Then
					Me.OnVolumeVAChanging(value)
					Me.SendPropertyChanging
					Me._VolumeVA = value
					Me.SendPropertyChanged("VolumeVA")
					Me.OnVolumeVAChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VolumeVAK", DbType:="NVarChar(255)")>  _
		Public Property VolumeVAK() As String
			Get
				Return Me._VolumeVAK
			End Get
			Set
				If (String.Equals(Me._VolumeVAK, value) = false) Then
					Me.OnVolumeVAKChanging(value)
					Me.SendPropertyChanging
					Me._VolumeVAK = value
					Me.SendPropertyChanged("VolumeVAK")
					Me.OnVolumeVAKChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaRangeDM", DbType:="NVarChar(50)")>  _
		Public Property PaRangeDM() As String
			Get
				Return Me._PaRangeDM
			End Get
			Set
				If (String.Equals(Me._PaRangeDM, value) = false) Then
					Me.OnPaRangeDMChanging(value)
					Me.SendPropertyChanging
					Me._PaRangeDM = value
					Me.SendPropertyChanged("PaRangeDM")
					Me.OnPaRangeDMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PeRangeDM", DbType:="NVarChar(50)")>  _
		Public Property PeRangeDM() As String
			Get
				Return Me._PeRangeDM
			End Get
			Set
				If (String.Equals(Me._PeRangeDM, value) = false) Then
					Me.OnPeRangeDMChanging(value)
					Me.SendPropertyChanging
					Me._PeRangeDM = value
					Me.SendPropertyChanged("PeRangeDM")
					Me.OnPeRangeDMChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GCLIdentification", DbType:="NVarChar(255)")>  _
		Public Property GCLIdentification() As String
			Get
				Return Me._GCLIdentification
			End Get
			Set
				If (String.Equals(Me._GCLIdentification, value) = false) Then
					Me.OnGCLIdentificationChanging(value)
					Me.SendPropertyChanging
					Me._GCLIdentification = value
					Me.SendPropertyChanged("GCLIdentification")
					Me.OnGCLIdentificationChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InspectionProcedure", DbType:="NVarChar(255) NOT NULL", CanBeNull:=false)>  _
		Public Property InspectionProcedure() As String
			Get
				Return Me._InspectionProcedure
			End Get
			Set
				If (String.Equals(Me._InspectionProcedure, value) = false) Then
					Me.OnInspectionProcedureChanging(value)
					Me.SendPropertyChanging
					Me._InspectionProcedure = value
					Me.SendPropertyChanged("InspectionProcedure")
					Me.OnInspectionProcedureChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FSDStart", DbType:="SmallInt")>  _
		Public Property FSDStart() As System.Nullable(Of Short)
			Get
				Return Me._FSDStart
			End Get
			Set
				If (Me._FSDStart.Equals(value) = false) Then
					Me.OnFSDStartChanging(value)
					Me.SendPropertyChanging
					Me._FSDStart = value
					Me.SendPropertyChanged("FSDStart")
					Me.OnFSDStartChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GCLCode", DbType:="NVarChar(50)")>  _
		Public Property GCLCode() As String
			Get
				Return Me._GCLCode
			End Get
			Set
				If (String.Equals(Me._GCLCode, value) = false) Then
					Me.OnGCLCodeChanging(value)
					Me.SendPropertyChanging
					Me._GCLCode = value
					Me.SendPropertyChanged("GCLCode")
					Me.OnGCLCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StatusGCL", DbType:="INT")>  _
		Public Property StatusGCL() As Integer
			Get
				Return Me._StatusGCL
			End Get
			Set
				If ((Me._StatusGCL = value)  _
							= false) Then
					Me.OnStatusGCLChanging(value)
					Me.SendPropertyChanging
					Me._StatusGCL = value
					Me.SendPropertyChanged("StatusGCL")
					Me.OnStatusGCLChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="GasControlLine_GCLObject", Storage:="_GCLObjects", ThisKey:="GasControlLine_Id", OtherKey:="GCLLinkID")>  _
		Public Property GCLObjects() As EntitySet(Of GCLObject)
			Get
				Return Me._GCLObjects
			End Get
			Set
				Me._GCLObjects.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PRS_GasControlLine", Storage:="_PRS", ThisKey:="PRSLinkID", OtherKey:="PRS_Id", IsForeignKey:=true)>  _
		Public Property PRS() As PRS
			Get
				Return Me._PRS.Entity
			End Get
			Set
				Dim previousValue As PRS = Me._PRS.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._PRS.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._PRS.Entity = Nothing
						previousValue.GasControlLines.Remove(Me)
					End If
					Me._PRS.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.GasControlLines.Add(Me)
						Me._PRSLinkID = value.PRS_Id
					Else
						Me._PRSLinkID = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("PRS")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_GCLObjects(ByVal entity As GCLObject)
			Me.SendPropertyChanging
			entity.GasControlLine = Me
		End Sub
		
		Private Sub detach_GCLObjects(ByVal entity As GCLObject)
			Me.SendPropertyChanging
			entity.GasControlLine = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="GCLObjects")>  _
	Partial Public Class GCLObject
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _GCLObjects_Id As Integer
		
		Private _GCLLinkID As Integer
		
		Private _ObjectName As String
		
		Private _ObjectID As String
		
		Private _MeasurePoint As String
		
		Private _MeasurePointID As String
		
		Private _FieldNo As System.Nullable(Of Short)
		
		Private _Value As String
		
		Private _Percentage As String
		
		Private _ValueMin As String
		
		Private _ValueMax As String
		
		Private _UOV As String
		
		Private _GasControlLine As EntityRef(Of GasControlLine)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnGCLObjects_IdChanging(value As Integer)
    End Sub
    Partial Private Sub OnGCLObjects_IdChanged()
    End Sub
    Partial Private Sub OnGCLLinkIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnGCLLinkIDChanged()
    End Sub
    Partial Private Sub OnObjectNameChanging(value As String)
    End Sub
    Partial Private Sub OnObjectNameChanged()
    End Sub
    Partial Private Sub OnObjectIDChanging(value As String)
    End Sub
    Partial Private Sub OnObjectIDChanged()
    End Sub
    Partial Private Sub OnMeasurePointChanging(value As String)
    End Sub
    Partial Private Sub OnMeasurePointChanged()
    End Sub
    Partial Private Sub OnMeasurePointIDChanging(value As String)
    End Sub
    Partial Private Sub OnMeasurePointIDChanged()
    End Sub
    Partial Private Sub OnFieldNoChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnFieldNoChanged()
    End Sub
    Partial Private Sub OnValueChanging(value As String)
    End Sub
    Partial Private Sub OnValueChanged()
    End Sub
    Partial Private Sub OnPercentageChanging(value As String)
    End Sub
    Partial Private Sub OnPercentageChanged()
    End Sub
    Partial Private Sub OnValueMinChanging(value As String)
    End Sub
    Partial Private Sub OnValueMinChanged()
    End Sub
    Partial Private Sub OnValueMaxChanging(value As String)
    End Sub
    Partial Private Sub OnValueMaxChanged()
    End Sub
    Partial Private Sub OnUOVChanging(value As String)
    End Sub
    Partial Private Sub OnUOVChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._GasControlLine = CType(Nothing, EntityRef(Of GasControlLine))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GCLObjects_Id", DbType:="Int", IsPrimaryKey:=true)>  _
		Public Property GCLObjects_Id() As Integer
			Get
				Return Me._GCLObjects_Id
			End Get
			Set
				If ((Me._GCLObjects_Id = value)  _
							= false) Then
					Me.OnGCLObjects_IdChanging(value)
					Me.SendPropertyChanging
					Me._GCLObjects_Id = value
					Me.SendPropertyChanged("GCLObjects_Id")
					Me.OnGCLObjects_IdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GCLLinkID", DbType:="Int NOT NULL")>  _
		Public Property GCLLinkID() As Integer
			Get
				Return Me._GCLLinkID
			End Get
			Set
				If ((Me._GCLLinkID = value)  _
							= false) Then
					If Me._GasControlLine.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnGCLLinkIDChanging(value)
					Me.SendPropertyChanging
					Me._GCLLinkID = value
					Me.SendPropertyChanged("GCLLinkID")
					Me.OnGCLLinkIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ObjectName", DbType:="NVarChar(255)")>  _
		Public Property ObjectName() As String
			Get
				Return Me._ObjectName
			End Get
			Set
				If (String.Equals(Me._ObjectName, value) = false) Then
					Me.OnObjectNameChanging(value)
					Me.SendPropertyChanging
					Me._ObjectName = value
					Me.SendPropertyChanged("ObjectName")
					Me.OnObjectNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ObjectID", DbType:="NVarChar(255)")>  _
		Public Property ObjectID() As String
			Get
				Return Me._ObjectID
			End Get
			Set
				If (String.Equals(Me._ObjectID, value) = false) Then
					Me.OnObjectIDChanging(value)
					Me.SendPropertyChanging
					Me._ObjectID = value
					Me.SendPropertyChanged("ObjectID")
					Me.OnObjectIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MeasurePoint", DbType:="NVarChar(255)")>  _
		Public Property MeasurePoint() As String
			Get
				Return Me._MeasurePoint
			End Get
			Set
				If (String.Equals(Me._MeasurePoint, value) = false) Then
					Me.OnMeasurePointChanging(value)
					Me.SendPropertyChanging
					Me._MeasurePoint = value
					Me.SendPropertyChanged("MeasurePoint")
					Me.OnMeasurePointChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MeasurePointID", DbType:="NVarChar(255)")>  _
		Public Property MeasurePointID() As String
			Get
				Return Me._MeasurePointID
			End Get
			Set
				If (String.Equals(Me._MeasurePointID, value) = false) Then
					Me.OnMeasurePointIDChanging(value)
					Me.SendPropertyChanging
					Me._MeasurePointID = value
					Me.SendPropertyChanged("MeasurePointID")
					Me.OnMeasurePointIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FieldNo", DbType:="SmallInt")>  _
		Public Property FieldNo() As System.Nullable(Of Short)
			Get
				Return Me._FieldNo
			End Get
			Set
				If (Me._FieldNo.Equals(value) = false) Then
					Me.OnFieldNoChanging(value)
					Me.SendPropertyChanging
					Me._FieldNo = value
					Me.SendPropertyChanged("FieldNo")
					Me.OnFieldNoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Value", DbType:="NVarChar(255)")>  _
		Public Property Value() As String
			Get
				Return Me._Value
			End Get
			Set
				If (String.Equals(Me._Value, value) = false) Then
					Me.OnValueChanging(value)
					Me.SendPropertyChanging
					Me._Value = value
					Me.SendPropertyChanged("Value")
					Me.OnValueChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Percentage", DbType:="NVarChar(255)")>  _
		Public Property Percentage() As String
			Get
				Return Me._Percentage
			End Get
			Set
				If (String.Equals(Me._Percentage, value) = false) Then
					Me.OnPercentageChanging(value)
					Me.SendPropertyChanging
					Me._Percentage = value
					Me.SendPropertyChanged("Percentage")
					Me.OnPercentageChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValueMin", DbType:="NVarChar(255)")>  _
		Public Property ValueMin() As String
			Get
				Return Me._ValueMin
			End Get
			Set
				If (String.Equals(Me._ValueMin, value) = false) Then
					Me.OnValueMinChanging(value)
					Me.SendPropertyChanging
					Me._ValueMin = value
					Me.SendPropertyChanged("ValueMin")
					Me.OnValueMinChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValueMax", DbType:="NVarChar(255)")>  _
		Public Property ValueMax() As String
			Get
				Return Me._ValueMax
			End Get
			Set
				If (String.Equals(Me._ValueMax, value) = false) Then
					Me.OnValueMaxChanging(value)
					Me.SendPropertyChanging
					Me._ValueMax = value
					Me.SendPropertyChanged("ValueMax")
					Me.OnValueMaxChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UOV", DbType:="NVarChar(255)")>  _
		Public Property UOV() As String
			Get
				Return Me._UOV
			End Get
			Set
				If (String.Equals(Me._UOV, value) = false) Then
					Me.OnUOVChanging(value)
					Me.SendPropertyChanging
					Me._UOV = value
					Me.SendPropertyChanged("UOV")
					Me.OnUOVChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="GasControlLine_GCLObject", Storage:="_GasControlLine", ThisKey:="GCLLinkID", OtherKey:="GasControlLine_Id", IsForeignKey:=true)>  _
		Public Property GasControlLine() As GasControlLine
			Get
				Return Me._GasControlLine.Entity
			End Get
			Set
				Dim previousValue As GasControlLine = Me._GasControlLine.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._GasControlLine.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._GasControlLine.Entity = Nothing
						previousValue.GCLObjects.Remove(Me)
					End If
					Me._GasControlLine.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.GCLObjects.Add(Me)
						Me._GCLLinkID = value.GasControlLine_Id
					Else
						Me._GCLLinkID = CType(Nothing, Integer)
					End If
					Me.SendPropertyChanged("GasControlLine")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute()>  _
	Partial Public Class PRS
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _PRS_Id As Integer
		
		Private _PRSCode As String
		
		Private _PRSName As String
		
		Private _PRSIdentification As String
		
		Private _Route As String
		
		Private _Information As String
		
		Private _InspectionProcedure As String
		
		Private _StatusPRS As Integer
		
		Private _StatusGCL As Integer
		
		Private _GasControlLines As EntitySet(Of GasControlLine)
		
		Private _PRSObjects As EntitySet(Of PRSObject)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPRS_IdChanging(value As Integer)
    End Sub
    Partial Private Sub OnPRS_IdChanged()
    End Sub
    Partial Private Sub OnPRSCodeChanging(value As String)
    End Sub
    Partial Private Sub OnPRSCodeChanged()
    End Sub
    Partial Private Sub OnPRSNameChanging(value As String)
    End Sub
    Partial Private Sub OnPRSNameChanged()
    End Sub
    Partial Private Sub OnPRSIdentificationChanging(value As String)
    End Sub
    Partial Private Sub OnPRSIdentificationChanged()
    End Sub
    Partial Private Sub OnRouteChanging(value As String)
    End Sub
    Partial Private Sub OnRouteChanged()
    End Sub
    Partial Private Sub OnInformationChanging(value As String)
    End Sub
    Partial Private Sub OnInformationChanged()
    End Sub
    Partial Private Sub OnInspectionProcedureChanging(value As String)
    End Sub
    Partial Private Sub OnInspectionProcedureChanged()
    End Sub
    Partial Private Sub OnStatusPRSChanging(value As Integer)
    End Sub
    Partial Private Sub OnStatusPRSChanged()
    End Sub
    Partial Private Sub OnStatusGCLChanging(value As Integer)
    End Sub
    Partial Private Sub OnStatusGCLChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._GasControlLines = New EntitySet(Of GasControlLine)(AddressOf Me.attach_GasControlLines, AddressOf Me.detach_GasControlLines)
			Me._PRSObjects = New EntitySet(Of PRSObject)(AddressOf Me.attach_PRSObjects, AddressOf Me.detach_PRSObjects)
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRS_Id", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property PRS_Id() As Integer
			Get
				Return Me._PRS_Id
			End Get
			Set
				If ((Me._PRS_Id = value)  _
							= false) Then
					Me.OnPRS_IdChanging(value)
					Me.SendPropertyChanging
					Me._PRS_Id = value
					Me.SendPropertyChanged("PRS_Id")
					Me.OnPRS_IdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRSCode", DbType:="NVarChar(255)")>  _
		Public Property PRSCode() As String
			Get
				Return Me._PRSCode
			End Get
			Set
				If (String.Equals(Me._PRSCode, value) = false) Then
					Me.OnPRSCodeChanging(value)
					Me.SendPropertyChanging
					Me._PRSCode = value
					Me.SendPropertyChanged("PRSCode")
					Me.OnPRSCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRSName", DbType:="NVarChar(255)")>  _
		Public Property PRSName() As String
			Get
				Return Me._PRSName
			End Get
			Set
				If (String.Equals(Me._PRSName, value) = false) Then
					Me.OnPRSNameChanging(value)
					Me.SendPropertyChanging
					Me._PRSName = value
					Me.SendPropertyChanged("PRSName")
					Me.OnPRSNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRSIdentification", DbType:="NVarChar(255)")>  _
		Public Property PRSIdentification() As String
			Get
				Return Me._PRSIdentification
			End Get
			Set
				If (String.Equals(Me._PRSIdentification, value) = false) Then
					Me.OnPRSIdentificationChanging(value)
					Me.SendPropertyChanging
					Me._PRSIdentification = value
					Me.SendPropertyChanged("PRSIdentification")
					Me.OnPRSIdentificationChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Route", DbType:="NVarChar(255)")>  _
		Public Property Route() As String
			Get
				Return Me._Route
			End Get
			Set
				If (String.Equals(Me._Route, value) = false) Then
					Me.OnRouteChanging(value)
					Me.SendPropertyChanging
					Me._Route = value
					Me.SendPropertyChanged("Route")
					Me.OnRouteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Information", DbType:="NVarChar(255)")>  _
		Public Property Information() As String
			Get
				Return Me._Information
			End Get
			Set
				If (String.Equals(Me._Information, value) = false) Then
					Me.OnInformationChanging(value)
					Me.SendPropertyChanging
					Me._Information = value
					Me.SendPropertyChanged("Information")
					Me.OnInformationChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InspectionProcedure", DbType:="NVarChar(255)")>  _
		Public Property InspectionProcedure() As String
			Get
				Return Me._InspectionProcedure
			End Get
			Set
				If (String.Equals(Me._InspectionProcedure, value) = false) Then
					Me.OnInspectionProcedureChanging(value)
					Me.SendPropertyChanging
					Me._InspectionProcedure = value
					Me.SendPropertyChanged("InspectionProcedure")
					Me.OnInspectionProcedureChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StatusPRS", DbType:="INT")>  _
		Public Property StatusPRS() As Integer
			Get
				Return Me._StatusPRS
			End Get
			Set
				If ((Me._StatusPRS = value)  _
							= false) Then
					Me.OnStatusPRSChanging(value)
					Me.SendPropertyChanging
					Me._StatusPRS = value
					Me.SendPropertyChanged("StatusPRS")
					Me.OnStatusPRSChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StatusGCL", DbType:="INT")>  _
		Public Property StatusGCL() As Integer
			Get
				Return Me._StatusGCL
			End Get
			Set
				If ((Me._StatusGCL = value)  _
							= false) Then
					Me.OnStatusGCLChanging(value)
					Me.SendPropertyChanging
					Me._StatusGCL = value
					Me.SendPropertyChanged("StatusGCL")
					Me.OnStatusGCLChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PRS_GasControlLine", Storage:="_GasControlLines", ThisKey:="PRS_Id", OtherKey:="PRSLinkID")>  _
		Public Property GasControlLines() As EntitySet(Of GasControlLine)
			Get
				Return Me._GasControlLines
			End Get
			Set
				Me._GasControlLines.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PRS_PRSObject", Storage:="_PRSObjects", ThisKey:="PRS_Id", OtherKey:="PRSLinkID")>  _
		Public Property PRSObjects() As EntitySet(Of PRSObject)
			Get
				Return Me._PRSObjects
			End Get
			Set
				Me._PRSObjects.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_GasControlLines(ByVal entity As GasControlLine)
			Me.SendPropertyChanging
			entity.PRS = Me
		End Sub
		
		Private Sub detach_GasControlLines(ByVal entity As GasControlLine)
			Me.SendPropertyChanging
			entity.PRS = Nothing
		End Sub
		
		Private Sub attach_PRSObjects(ByVal entity As PRSObject)
			Me.SendPropertyChanging
			entity.PRS = Me
		End Sub
		
		Private Sub detach_PRSObjects(ByVal entity As PRSObject)
			Me.SendPropertyChanging
			entity.PRS = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="PRSObjects")>  _
	Partial Public Class PRSObject
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _PRSObjects_Id As Integer
		
		Private _PRSLinkID As System.Nullable(Of Integer)
		
		Private _ObjectName As String
		
		Private _ObjectID As String
		
		Private _MeasurePoint As String
		
		Private _MeasurePointID As String
		
		Private _FieldNo As System.Nullable(Of Short)
		
		Private _PRS As EntityRef(Of PRS)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPRSObjects_IdChanging(value As Integer)
    End Sub
    Partial Private Sub OnPRSObjects_IdChanged()
    End Sub
    Partial Private Sub OnPRSLinkIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRSLinkIDChanged()
    End Sub
    Partial Private Sub OnObjectNameChanging(value As String)
    End Sub
    Partial Private Sub OnObjectNameChanged()
    End Sub
    Partial Private Sub OnObjectIDChanging(value As String)
    End Sub
    Partial Private Sub OnObjectIDChanged()
    End Sub
    Partial Private Sub OnMeasurePointChanging(value As String)
    End Sub
    Partial Private Sub OnMeasurePointChanged()
    End Sub
    Partial Private Sub OnMeasurePointIDChanging(value As String)
    End Sub
    Partial Private Sub OnMeasurePointIDChanged()
    End Sub
    Partial Private Sub OnFieldNoChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnFieldNoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._PRS = CType(Nothing, EntityRef(Of PRS))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRSObjects_Id", DbType:="Int", IsPrimaryKey:=true)>  _
		Public Property PRSObjects_Id() As Integer
			Get
				Return Me._PRSObjects_Id
			End Get
			Set
				If ((Me._PRSObjects_Id = value)  _
							= false) Then
					Me.OnPRSObjects_IdChanging(value)
					Me.SendPropertyChanging
					Me._PRSObjects_Id = value
					Me.SendPropertyChanged("PRSObjects_Id")
					Me.OnPRSObjects_IdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRSLinkID", DbType:="Int")>  _
		Public Property PRSLinkID() As System.Nullable(Of Integer)
			Get
				Return Me._PRSLinkID
			End Get
			Set
				If (Me._PRSLinkID.Equals(value) = false) Then
					If Me._PRS.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnPRSLinkIDChanging(value)
					Me.SendPropertyChanging
					Me._PRSLinkID = value
					Me.SendPropertyChanged("PRSLinkID")
					Me.OnPRSLinkIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ObjectName", DbType:="NVarChar(255)")>  _
		Public Property ObjectName() As String
			Get
				Return Me._ObjectName
			End Get
			Set
				If (String.Equals(Me._ObjectName, value) = false) Then
					Me.OnObjectNameChanging(value)
					Me.SendPropertyChanging
					Me._ObjectName = value
					Me.SendPropertyChanged("ObjectName")
					Me.OnObjectNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ObjectID", DbType:="NVarChar(255)")>  _
		Public Property ObjectID() As String
			Get
				Return Me._ObjectID
			End Get
			Set
				If (String.Equals(Me._ObjectID, value) = false) Then
					Me.OnObjectIDChanging(value)
					Me.SendPropertyChanging
					Me._ObjectID = value
					Me.SendPropertyChanged("ObjectID")
					Me.OnObjectIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MeasurePoint", DbType:="NVarChar(255)")>  _
		Public Property MeasurePoint() As String
			Get
				Return Me._MeasurePoint
			End Get
			Set
				If (String.Equals(Me._MeasurePoint, value) = false) Then
					Me.OnMeasurePointChanging(value)
					Me.SendPropertyChanging
					Me._MeasurePoint = value
					Me.SendPropertyChanged("MeasurePoint")
					Me.OnMeasurePointChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MeasurePointID", DbType:="NVarChar(255)")>  _
		Public Property MeasurePointID() As String
			Get
				Return Me._MeasurePointID
			End Get
			Set
				If (String.Equals(Me._MeasurePointID, value) = false) Then
					Me.OnMeasurePointIDChanging(value)
					Me.SendPropertyChanging
					Me._MeasurePointID = value
					Me.SendPropertyChanged("MeasurePointID")
					Me.OnMeasurePointIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FieldNo", DbType:="SmallInt")>  _
		Public Property FieldNo() As System.Nullable(Of Short)
			Get
				Return Me._FieldNo
			End Get
			Set
				If (Me._FieldNo.Equals(value) = false) Then
					Me.OnFieldNoChanging(value)
					Me.SendPropertyChanging
					Me._FieldNo = value
					Me.SendPropertyChanged("FieldNo")
					Me.OnFieldNoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PRS_PRSObject", Storage:="_PRS", ThisKey:="PRSLinkID", OtherKey:="PRS_Id", IsForeignKey:=true)>  _
		Public Property PRS() As PRS
			Get
				Return Me._PRS.Entity
			End Get
			Set
				Dim previousValue As PRS = Me._PRS.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._PRS.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._PRS.Entity = Nothing
						previousValue.PRSObjects.Remove(Me)
					End If
					Me._PRS.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.PRSObjects.Add(Me)
						Me._PRSLinkID = value.PRS_Id
					Else
						Me._PRSLinkID = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("PRS")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
End Namespace
