'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection

Namespace Resultssql.DataAccess
	
	Partial Public Class Results
		Inherits System.Data.Linq.DataContext
		
		Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub InsertInspectionResult(instance As InspectionResult)
    End Sub
    Partial Private Sub UpdateInspectionResult(instance As InspectionResult)
    End Sub
    Partial Private Sub DeleteInspectionResult(instance As InspectionResult)
    End Sub
    Partial Private Sub InsertList(instance As List)
    End Sub
    Partial Private Sub UpdateList(instance As List)
    End Sub
    Partial Private Sub DeleteList(instance As List)
    End Sub
    Partial Private Sub InsertResult(instance As Result)
    End Sub
    Partial Private Sub UpdateResult(instance As Result)
    End Sub
    Partial Private Sub DeleteResult(instance As Result)
    End Sub
    #End Region
		
		Public Sub New(ByVal connection As String)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public ReadOnly Property InspectionResults() As System.Data.Linq.Table(Of InspectionResult)
			Get
				Return Me.GetTable(Of InspectionResult)
			End Get
		End Property
		
		Public ReadOnly Property Lists() As System.Data.Linq.Table(Of List)
			Get
				Return Me.GetTable(Of List)
			End Get
		End Property
		
		Public ReadOnly Property Results1() As System.Data.Linq.Table(Of Result)
			Get
				Return Me.GetTable(Of Result)
			End Get
		End Property
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute()>  _
	Partial Public Class InspectionResult
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _InspectionResult_Id As Integer
		
		Private _Status As String
		
		Private _PRSIdentification As String
		
		Private _PRSName As String
		
		Private _PRSCode As String
		
		Private _GasControlLineName As String
		
		Private _GCLIdentification As String
		
		Private _GCLCode As String
		
		Private _CRC As String
		
		Private _LastResult As String
		
		Private _ID_DM1 As String
		
		Private _ID_DM2 As String
		
		Private _BT_Address As String
		
		Private _InspectionProcedureName As String
		
		Private _InspectionProcedureVersion As String
		
		Private _StartTime As System.Nullable(Of Date)
		
		Private _EndTime As System.Nullable(Of Date)
		
		Private _TimeZone As String
		
		Private _DST As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnInspectionResult_IdChanging(value As Integer)
    End Sub
    Partial Private Sub OnInspectionResult_IdChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As String)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnPRSIdentificationChanging(value As String)
    End Sub
    Partial Private Sub OnPRSIdentificationChanged()
    End Sub
    Partial Private Sub OnPRSNameChanging(value As String)
    End Sub
    Partial Private Sub OnPRSNameChanged()
    End Sub
    Partial Private Sub OnPRSCodeChanging(value As String)
    End Sub
    Partial Private Sub OnPRSCodeChanged()
    End Sub
    Partial Private Sub OnGasControlLineNameChanging(value As String)
    End Sub
    Partial Private Sub OnGasControlLineNameChanged()
    End Sub
    Partial Private Sub OnGCLIdentificationChanging(value As String)
    End Sub
    Partial Private Sub OnGCLIdentificationChanged()
    End Sub
    Partial Private Sub OnGCLCodeChanging(value As String)
    End Sub
    Partial Private Sub OnGCLCodeChanged()
    End Sub
    Partial Private Sub OnCRCChanging(value As String)
    End Sub
    Partial Private Sub OnCRCChanged()
    End Sub
    Partial Private Sub OnLastResultChanging(value As String)
    End Sub
    Partial Private Sub OnLastResultChanged()
    End Sub
    Partial Private Sub OnID_DM1Changing(value As String)
    End Sub
    Partial Private Sub OnID_DM1Changed()
    End Sub
    Partial Private Sub OnID_DM2Changing(value As String)
    End Sub
    Partial Private Sub OnID_DM2Changed()
    End Sub
    Partial Private Sub OnBT_AddressChanging(value As String)
    End Sub
    Partial Private Sub OnBT_AddressChanged()
    End Sub
    Partial Private Sub OnInspectionProcedureNameChanging(value As String)
    End Sub
    Partial Private Sub OnInspectionProcedureNameChanged()
    End Sub
    Partial Private Sub OnInspectionProcedureVersionChanging(value As String)
    End Sub
    Partial Private Sub OnInspectionProcedureVersionChanged()
    End Sub
    Partial Private Sub OnStartTimeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnStartTimeChanged()
    End Sub
    Partial Private Sub OnEndTimeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEndTimeChanged()
    End Sub
    Partial Private Sub OnTimeZoneChanging(value As String)
    End Sub
    Partial Private Sub OnTimeZoneChanged()
    End Sub
    Partial Private Sub OnDSTChanging(value As String)
    End Sub
    Partial Private Sub OnDSTChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InspectionResult_Id", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property InspectionResult_Id() As Integer
			Get
				Return Me._InspectionResult_Id
			End Get
			Set
				If ((Me._InspectionResult_Id = value)  _
							= false) Then
					Me.OnInspectionResult_IdChanging(value)
					Me.SendPropertyChanging
					Me._InspectionResult_Id = value
					Me.SendPropertyChanged("InspectionResult_Id")
					Me.OnInspectionResult_IdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="NVarChar(255)")>  _
		Public Property Status() As String
			Get
				Return Me._Status
			End Get
			Set
				If (String.Equals(Me._Status, value) = false) Then
					Me.OnStatusChanging(value)
					Me.SendPropertyChanging
					Me._Status = value
					Me.SendPropertyChanged("Status")
					Me.OnStatusChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRSIdentification", DbType:="NVarChar(255)")>  _
		Public Property PRSIdentification() As String
			Get
				Return Me._PRSIdentification
			End Get
			Set
				If (String.Equals(Me._PRSIdentification, value) = false) Then
					Me.OnPRSIdentificationChanging(value)
					Me.SendPropertyChanging
					Me._PRSIdentification = value
					Me.SendPropertyChanged("PRSIdentification")
					Me.OnPRSIdentificationChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRSName", DbType:="NVarChar(255)")>  _
		Public Property PRSName() As String
			Get
				Return Me._PRSName
			End Get
			Set
				If (String.Equals(Me._PRSName, value) = false) Then
					Me.OnPRSNameChanging(value)
					Me.SendPropertyChanging
					Me._PRSName = value
					Me.SendPropertyChanged("PRSName")
					Me.OnPRSNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRSCode", DbType:="NVarChar(255)")>  _
		Public Property PRSCode() As String
			Get
				Return Me._PRSCode
			End Get
			Set
				If (String.Equals(Me._PRSCode, value) = false) Then
					Me.OnPRSCodeChanging(value)
					Me.SendPropertyChanging
					Me._PRSCode = value
					Me.SendPropertyChanged("PRSCode")
					Me.OnPRSCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GasControlLineName", DbType:="NVarChar(255)")>  _
		Public Property GasControlLineName() As String
			Get
				Return Me._GasControlLineName
			End Get
			Set
				If (String.Equals(Me._GasControlLineName, value) = false) Then
					Me.OnGasControlLineNameChanging(value)
					Me.SendPropertyChanging
					Me._GasControlLineName = value
					Me.SendPropertyChanged("GasControlLineName")
					Me.OnGasControlLineNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GCLIdentification", DbType:="NVarChar(255)")>  _
		Public Property GCLIdentification() As String
			Get
				Return Me._GCLIdentification
			End Get
			Set
				If (String.Equals(Me._GCLIdentification, value) = false) Then
					Me.OnGCLIdentificationChanging(value)
					Me.SendPropertyChanging
					Me._GCLIdentification = value
					Me.SendPropertyChanged("GCLIdentification")
					Me.OnGCLIdentificationChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GCLCode", DbType:="NVarChar(50)")>  _
		Public Property GCLCode() As String
			Get
				Return Me._GCLCode
			End Get
			Set
				If (String.Equals(Me._GCLCode, value) = false) Then
					Me.OnGCLCodeChanging(value)
					Me.SendPropertyChanging
					Me._GCLCode = value
					Me.SendPropertyChanged("GCLCode")
					Me.OnGCLCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CRC", DbType:="NVarChar(255)")>  _
		Public Property CRC() As String
			Get
				Return Me._CRC
			End Get
			Set
				If (String.Equals(Me._CRC, value) = false) Then
					Me.OnCRCChanging(value)
					Me.SendPropertyChanging
					Me._CRC = value
					Me.SendPropertyChanged("CRC")
					Me.OnCRCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastResult", DbType:="NVarChar(2)")>  _
		Public Property LastResult() As String
			Get
				Return Me._LastResult
			End Get
			Set
				If (String.Equals(Me._LastResult, value) = false) Then
					Me.OnLastResultChanging(value)
					Me.SendPropertyChanging
					Me._LastResult = value
					Me.SendPropertyChanged("LastResult")
					Me.OnLastResultChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_DM1", DbType:="NVarChar(255)")>  _
		Public Property ID_DM1() As String
			Get
				Return Me._ID_DM1
			End Get
			Set
				If (String.Equals(Me._ID_DM1, value) = false) Then
					Me.OnID_DM1Changing(value)
					Me.SendPropertyChanging
					Me._ID_DM1 = value
					Me.SendPropertyChanged("ID_DM1")
					Me.OnID_DM1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID_DM2", DbType:="NVarChar(255)")>  _
		Public Property ID_DM2() As String
			Get
				Return Me._ID_DM2
			End Get
			Set
				If (String.Equals(Me._ID_DM2, value) = false) Then
					Me.OnID_DM2Changing(value)
					Me.SendPropertyChanging
					Me._ID_DM2 = value
					Me.SendPropertyChanged("ID_DM2")
					Me.OnID_DM2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BT_Address", DbType:="NVarChar(255)")>  _
		Public Property BT_Address() As String
			Get
				Return Me._BT_Address
			End Get
			Set
				If (String.Equals(Me._BT_Address, value) = false) Then
					Me.OnBT_AddressChanging(value)
					Me.SendPropertyChanging
					Me._BT_Address = value
					Me.SendPropertyChanged("BT_Address")
					Me.OnBT_AddressChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InspectionProcedureName", DbType:="NVarChar(255)")>  _
		Public Property InspectionProcedureName() As String
			Get
				Return Me._InspectionProcedureName
			End Get
			Set
				If (String.Equals(Me._InspectionProcedureName, value) = false) Then
					Me.OnInspectionProcedureNameChanging(value)
					Me.SendPropertyChanging
					Me._InspectionProcedureName = value
					Me.SendPropertyChanged("InspectionProcedureName")
					Me.OnInspectionProcedureNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InspectionProcedureVersion", DbType:="NVarChar(255)")>  _
		Public Property InspectionProcedureVersion() As String
			Get
				Return Me._InspectionProcedureVersion
			End Get
			Set
				If (String.Equals(Me._InspectionProcedureVersion, value) = false) Then
					Me.OnInspectionProcedureVersionChanging(value)
					Me.SendPropertyChanging
					Me._InspectionProcedureVersion = value
					Me.SendPropertyChanged("InspectionProcedureVersion")
					Me.OnInspectionProcedureVersionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartTime", DbType:="DateTime")>  _
		Public Property StartTime() As System.Nullable(Of Date)
			Get
				Return Me._StartTime
			End Get
			Set
				If (Me._StartTime.Equals(value) = false) Then
					Me.OnStartTimeChanging(value)
					Me.SendPropertyChanging
					Me._StartTime = value
					Me.SendPropertyChanged("StartTime")
					Me.OnStartTimeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndTime", DbType:="DateTime")>  _
		Public Property EndTime() As System.Nullable(Of Date)
			Get
				Return Me._EndTime
			End Get
			Set
				If (Me._EndTime.Equals(value) = false) Then
					Me.OnEndTimeChanging(value)
					Me.SendPropertyChanging
					Me._EndTime = value
					Me.SendPropertyChanged("EndTime")
					Me.OnEndTimeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TimeZone", DbType:="NVarChar(255)")>  _
		Public Property TimeZone() As String
			Get
				Return Me._TimeZone
			End Get
			Set
				If (String.Equals(Me._TimeZone, value) = false) Then
					Me.OnTimeZoneChanging(value)
					Me.SendPropertyChanging
					Me._TimeZone = value
					Me.SendPropertyChanged("TimeZone")
					Me.OnTimeZoneChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DST", DbType:="NVarChar(255)")>  _
		Public Property DST() As String
			Get
				Return Me._DST
			End Get
			Set
				If (String.Equals(Me._DST, value) = false) Then
					Me.OnDSTChanging(value)
					Me.SendPropertyChanging
					Me._DST = value
					Me.SendPropertyChanged("DST")
					Me.OnDSTChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute()>  _
	Partial Public Class List
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _List_Id As Integer
		
		Private _ResultLinkID As System.Nullable(Of Integer)
		
		Private _List_Column As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnList_IdChanging(value As Integer)
    End Sub
    Partial Private Sub OnList_IdChanged()
    End Sub
    Partial Private Sub OnResultLinkIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnResultLinkIDChanged()
    End Sub
    Partial Private Sub OnList_ColumnChanging(value As String)
    End Sub
    Partial Private Sub OnList_ColumnChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_List_Id", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property List_Id() As Integer
			Get
				Return Me._List_Id
			End Get
			Set
				If ((Me._List_Id = value)  _
							= false) Then
					Me.OnList_IdChanging(value)
					Me.SendPropertyChanging
					Me._List_Id = value
					Me.SendPropertyChanged("List_Id")
					Me.OnList_IdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ResultLinkID", DbType:="Int")>  _
		Public Property ResultLinkID() As System.Nullable(Of Integer)
			Get
				Return Me._ResultLinkID
			End Get
			Set
				If (Me._ResultLinkID.Equals(value) = false) Then
					Me.OnResultLinkIDChanging(value)
					Me.SendPropertyChanging
					Me._ResultLinkID = value
					Me.SendPropertyChanged("ResultLinkID")
					Me.OnResultLinkIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_List_Column", DbType:="NVarChar(255)")>  _
		Public Property List_Column() As String
			Get
				Return Me._List_Column
			End Get
			Set
				If (String.Equals(Me._List_Column, value) = false) Then
					Me.OnList_ColumnChanging(value)
					Me.SendPropertyChanging
					Me._List_Column = value
					Me.SendPropertyChanged("List_Column")
					Me.OnList_ColumnChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute()>  _
	Partial Public Class Result
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Result_Id As Integer
		
		Private _InspectionResultLinkID As System.Nullable(Of Integer)
		
		Private _ObjectName As String
		
		Private _ObjectID As String
		
		Private _MeasurePoint As String
		
		Private _MeasurePointID As String
		
		Private _FieldNo As String
		
		Private _Time As String
		
		Private _Text As String
		
		Private _Value As String
		
		Private _UOM As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnResult_IdChanging(value As Integer)
    End Sub
    Partial Private Sub OnResult_IdChanged()
    End Sub
    Partial Private Sub OnInspectionResultLinkIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnInspectionResultLinkIDChanged()
    End Sub
    Partial Private Sub OnObjectNameChanging(value As String)
    End Sub
    Partial Private Sub OnObjectNameChanged()
    End Sub
    Partial Private Sub OnObjectIDChanging(value As String)
    End Sub
    Partial Private Sub OnObjectIDChanged()
    End Sub
    Partial Private Sub OnMeasurePointChanging(value As String)
    End Sub
    Partial Private Sub OnMeasurePointChanged()
    End Sub
    Partial Private Sub OnMeasurePointIDChanging(value As String)
    End Sub
    Partial Private Sub OnMeasurePointIDChanged()
    End Sub
    Partial Private Sub OnFieldNoChanging(value As String)
    End Sub
    Partial Private Sub OnFieldNoChanged()
    End Sub
    Partial Private Sub OnTimeChanging(value As String)
    End Sub
    Partial Private Sub OnTimeChanged()
    End Sub
    Partial Private Sub OnTextChanging(value As String)
    End Sub
    Partial Private Sub OnTextChanged()
    End Sub
    Partial Private Sub OnValueChanging(value As String)
    End Sub
    Partial Private Sub OnValueChanged()
    End Sub
    Partial Private Sub OnUOMChanging(value As String)
    End Sub
    Partial Private Sub OnUOMChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Result_Id", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
		Public Property Result_Id() As Integer
			Get
				Return Me._Result_Id
			End Get
			Set
				If ((Me._Result_Id = value)  _
							= false) Then
					Me.OnResult_IdChanging(value)
					Me.SendPropertyChanging
					Me._Result_Id = value
					Me.SendPropertyChanged("Result_Id")
					Me.OnResult_IdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InspectionResultLinkID", DbType:="Int")>  _
		Public Property InspectionResultLinkID() As System.Nullable(Of Integer)
			Get
				Return Me._InspectionResultLinkID
			End Get
			Set
				If (Me._InspectionResultLinkID.Equals(value) = false) Then
					Me.OnInspectionResultLinkIDChanging(value)
					Me.SendPropertyChanging
					Me._InspectionResultLinkID = value
					Me.SendPropertyChanged("InspectionResultLinkID")
					Me.OnInspectionResultLinkIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ObjectName", DbType:="NVarChar(255)")>  _
		Public Property ObjectName() As String
			Get
				Return Me._ObjectName
			End Get
			Set
				If (String.Equals(Me._ObjectName, value) = false) Then
					Me.OnObjectNameChanging(value)
					Me.SendPropertyChanging
					Me._ObjectName = value
					Me.SendPropertyChanged("ObjectName")
					Me.OnObjectNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ObjectID", DbType:="NVarChar(255)")>  _
		Public Property ObjectID() As String
			Get
				Return Me._ObjectID
			End Get
			Set
				If (String.Equals(Me._ObjectID, value) = false) Then
					Me.OnObjectIDChanging(value)
					Me.SendPropertyChanging
					Me._ObjectID = value
					Me.SendPropertyChanged("ObjectID")
					Me.OnObjectIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MeasurePoint", DbType:="NVarChar(255)")>  _
		Public Property MeasurePoint() As String
			Get
				Return Me._MeasurePoint
			End Get
			Set
				If (String.Equals(Me._MeasurePoint, value) = false) Then
					Me.OnMeasurePointChanging(value)
					Me.SendPropertyChanging
					Me._MeasurePoint = value
					Me.SendPropertyChanged("MeasurePoint")
					Me.OnMeasurePointChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MeasurePointID", DbType:="NVarChar(255)")>  _
		Public Property MeasurePointID() As String
			Get
				Return Me._MeasurePointID
			End Get
			Set
				If (String.Equals(Me._MeasurePointID, value) = false) Then
					Me.OnMeasurePointIDChanging(value)
					Me.SendPropertyChanging
					Me._MeasurePointID = value
					Me.SendPropertyChanged("MeasurePointID")
					Me.OnMeasurePointIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FieldNo", DbType:="NVarChar(255)")>  _
		Public Property FieldNo() As String
			Get
				Return Me._FieldNo
			End Get
			Set
				If (String.Equals(Me._FieldNo, value) = false) Then
					Me.OnFieldNoChanging(value)
					Me.SendPropertyChanging
					Me._FieldNo = value
					Me.SendPropertyChanged("FieldNo")
					Me.OnFieldNoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Time", DbType:="NVarChar(255)")>  _
		Public Property Time() As String
			Get
				Return Me._Time
			End Get
			Set
				If (String.Equals(Me._Time, value) = false) Then
					Me.OnTimeChanging(value)
					Me.SendPropertyChanging
					Me._Time = value
					Me.SendPropertyChanged("Time")
					Me.OnTimeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Text", DbType:="NVarChar(255)")>  _
		Public Property Text() As String
			Get
				Return Me._Text
			End Get
			Set
				If (String.Equals(Me._Text, value) = false) Then
					Me.OnTextChanging(value)
					Me.SendPropertyChanging
					Me._Text = value
					Me.SendPropertyChanged("Text")
					Me.OnTextChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Value", DbType:="NVarChar(255)")>  _
		Public Property Value() As String
			Get
				Return Me._Value
			End Get
			Set
				If (String.Equals(Me._Value, value) = false) Then
					Me.OnValueChanging(value)
					Me.SendPropertyChanging
					Me._Value = value
					Me.SendPropertyChanged("Value")
					Me.OnValueChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UOM", DbType:="NVarChar(255)")>  _
		Public Property UOM() As String
			Get
				Return Me._UOM
			End Get
			Set
				If (String.Equals(Me._UOM, value) = false) Then
					Me.OnUOMChanging(value)
					Me.SendPropertyChanging
					Me._UOM = value
					Me.SendPropertyChanged("UOM")
					Me.OnUOMChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
End Namespace
