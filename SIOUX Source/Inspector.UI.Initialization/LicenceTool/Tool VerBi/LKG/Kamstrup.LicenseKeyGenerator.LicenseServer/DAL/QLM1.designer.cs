#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17020
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kamstrup.LicenseKeyGenerator.LicenseServer.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="qlm")]
	public partial class QLMDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLicenseKey(LicenseKey instance);
    partial void UpdateLicenseKey(LicenseKey instance);
    partial void DeleteLicenseKey(LicenseKey instance);
    partial void InsertLog4LKG(Log4LKG instance);
    partial void UpdateLog4LKG(Log4LKG instance);
    partial void DeleteLog4LKG(Log4LKG instance);
    #endregion
		
		public QLMDataContext() : 
				base(global::Kamstrup.LicenseKeyGenerator.LicenseServer.Properties.Settings.Default.qlmConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLMDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLMDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLMDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLMDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<LicenseKey> LicenseKeys
		{
			get
			{
				return this.GetTable<LicenseKey>();
			}
		}
		
		public System.Data.Linq.Table<Log4LKG> Log4LKGs
		{
			get
			{
				return this.GetTable<Log4LKG>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LicenseKeys")]
	public partial class LicenseKey : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ActivationKey;
		
		private string _ComputerKey;
		
		private string _ComputerID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _ProductID;
		
		private string _MajorVersion;
		
		private string _MinorVersion;
		
		private System.Nullable<System.DateTime> _OrderDate;
		
		private System.Nullable<System.DateTime> _ActivationDate;
		
		private System.Nullable<System.DateTime> _LastAccessedDate;
		
		private System.Nullable<int> _ActivationCount;
		
		private string _OrderID;
		
		private string _Comment;
		
		private System.Nullable<System.DateTime> _MaintenanceRenewalDate;
		
		private System.Nullable<bool> _MaintenancePlanNotification;
		
		private System.Nullable<bool> _GenericLicense;
		
		private System.Nullable<int> _ReleaseCount;
		
		private System.Nullable<System.DateTime> _ReleaseDate;
		
		private System.Nullable<int> _NumLicenses;
		
		private System.Nullable<int> _AvailableLicenses;
		
		private string _ComputerName;
		
		private string _ClientVersion;
		
		private System.Nullable<bool> _Disabled;
		
		private string _UserData1;
		
		private string _AffiliateID;
		
		private string _ReceiptID;
		
		private System.Nullable<long> _OrderStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnActivationKeyChanging(string value);
    partial void OnActivationKeyChanged();
    partial void OnComputerKeyChanging(string value);
    partial void OnComputerKeyChanged();
    partial void OnComputerIDChanging(string value);
    partial void OnComputerIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnProductIDChanging(System.Nullable<int> value);
    partial void OnProductIDChanged();
    partial void OnMajorVersionChanging(string value);
    partial void OnMajorVersionChanged();
    partial void OnMinorVersionChanging(string value);
    partial void OnMinorVersionChanged();
    partial void OnOrderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOrderDateChanged();
    partial void OnActivationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActivationDateChanged();
    partial void OnLastAccessedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastAccessedDateChanged();
    partial void OnActivationCountChanging(System.Nullable<int> value);
    partial void OnActivationCountChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnMaintenanceRenewalDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMaintenanceRenewalDateChanged();
    partial void OnMaintenancePlanNotificationChanging(System.Nullable<bool> value);
    partial void OnMaintenancePlanNotificationChanged();
    partial void OnGenericLicenseChanging(System.Nullable<bool> value);
    partial void OnGenericLicenseChanged();
    partial void OnReleaseCountChanging(System.Nullable<int> value);
    partial void OnReleaseCountChanged();
    partial void OnReleaseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReleaseDateChanged();
    partial void OnNumLicensesChanging(System.Nullable<int> value);
    partial void OnNumLicensesChanged();
    partial void OnAvailableLicensesChanging(System.Nullable<int> value);
    partial void OnAvailableLicensesChanged();
    partial void OnComputerNameChanging(string value);
    partial void OnComputerNameChanged();
    partial void OnClientVersionChanging(string value);
    partial void OnClientVersionChanged();
    partial void OnDisabledChanging(System.Nullable<bool> value);
    partial void OnDisabledChanged();
    partial void OnUserData1Changing(string value);
    partial void OnUserData1Changed();
    partial void OnAffiliateIDChanging(string value);
    partial void OnAffiliateIDChanged();
    partial void OnReceiptIDChanging(string value);
    partial void OnReceiptIDChanged();
    partial void OnOrderStatusChanging(System.Nullable<long> value);
    partial void OnOrderStatusChanged();
    #endregion
		
		public LicenseKey()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationKey", DbType="NVarChar(255)")]
		public string ActivationKey
		{
			get
			{
				return this._ActivationKey;
			}
			set
			{
				if ((this._ActivationKey != value))
				{
					this.OnActivationKeyChanging(value);
					this.SendPropertyChanging();
					this._ActivationKey = value;
					this.SendPropertyChanged("ActivationKey");
					this.OnActivationKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerKey", DbType="NVarChar(255)")]
		public string ComputerKey
		{
			get
			{
				return this._ComputerKey;
			}
			set
			{
				if ((this._ComputerKey != value))
				{
					this.OnComputerKeyChanging(value);
					this.SendPropertyChanging();
					this._ComputerKey = value;
					this.SendPropertyChanged("ComputerKey");
					this.OnComputerKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerID", DbType="NVarChar(50)")]
		public string ComputerID
		{
			get
			{
				return this._ComputerID;
			}
			set
			{
				if ((this._ComputerID != value))
				{
					this.OnComputerIDChanging(value);
					this.SendPropertyChanging();
					this._ComputerID = value;
					this.SendPropertyChanged("ComputerID");
					this.OnComputerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int")]
		public System.Nullable<int> ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorVersion", DbType="NVarChar(50)")]
		public string MajorVersion
		{
			get
			{
				return this._MajorVersion;
			}
			set
			{
				if ((this._MajorVersion != value))
				{
					this.OnMajorVersionChanging(value);
					this.SendPropertyChanging();
					this._MajorVersion = value;
					this.SendPropertyChanged("MajorVersion");
					this.OnMajorVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinorVersion", DbType="NVarChar(50)")]
		public string MinorVersion
		{
			get
			{
				return this._MinorVersion;
			}
			set
			{
				if ((this._MinorVersion != value))
				{
					this.OnMinorVersionChanging(value);
					this.SendPropertyChanging();
					this._MinorVersion = value;
					this.SendPropertyChanged("MinorVersion");
					this.OnMinorVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActivationDate
		{
			get
			{
				return this._ActivationDate;
			}
			set
			{
				if ((this._ActivationDate != value))
				{
					this.OnActivationDateChanging(value);
					this.SendPropertyChanging();
					this._ActivationDate = value;
					this.SendPropertyChanged("ActivationDate");
					this.OnActivationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAccessedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastAccessedDate
		{
			get
			{
				return this._LastAccessedDate;
			}
			set
			{
				if ((this._LastAccessedDate != value))
				{
					this.OnLastAccessedDateChanging(value);
					this.SendPropertyChanging();
					this._LastAccessedDate = value;
					this.SendPropertyChanged("LastAccessedDate");
					this.OnLastAccessedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationCount", DbType="Int")]
		public System.Nullable<int> ActivationCount
		{
			get
			{
				return this._ActivationCount;
			}
			set
			{
				if ((this._ActivationCount != value))
				{
					this.OnActivationCountChanging(value);
					this.SendPropertyChanging();
					this._ActivationCount = value;
					this.SendPropertyChanged("ActivationCount");
					this.OnActivationCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="NVarChar(50)")]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(255)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintenanceRenewalDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MaintenanceRenewalDate
		{
			get
			{
				return this._MaintenanceRenewalDate;
			}
			set
			{
				if ((this._MaintenanceRenewalDate != value))
				{
					this.OnMaintenanceRenewalDateChanging(value);
					this.SendPropertyChanging();
					this._MaintenanceRenewalDate = value;
					this.SendPropertyChanged("MaintenanceRenewalDate");
					this.OnMaintenanceRenewalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintenancePlanNotification", DbType="Bit")]
		public System.Nullable<bool> MaintenancePlanNotification
		{
			get
			{
				return this._MaintenancePlanNotification;
			}
			set
			{
				if ((this._MaintenancePlanNotification != value))
				{
					this.OnMaintenancePlanNotificationChanging(value);
					this.SendPropertyChanging();
					this._MaintenancePlanNotification = value;
					this.SendPropertyChanged("MaintenancePlanNotification");
					this.OnMaintenancePlanNotificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenericLicense", DbType="Bit")]
		public System.Nullable<bool> GenericLicense
		{
			get
			{
				return this._GenericLicense;
			}
			set
			{
				if ((this._GenericLicense != value))
				{
					this.OnGenericLicenseChanging(value);
					this.SendPropertyChanging();
					this._GenericLicense = value;
					this.SendPropertyChanged("GenericLicense");
					this.OnGenericLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleaseCount", DbType="Int")]
		public System.Nullable<int> ReleaseCount
		{
			get
			{
				return this._ReleaseCount;
			}
			set
			{
				if ((this._ReleaseCount != value))
				{
					this.OnReleaseCountChanging(value);
					this.SendPropertyChanging();
					this._ReleaseCount = value;
					this.SendPropertyChanged("ReleaseCount");
					this.OnReleaseCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReleaseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReleaseDate
		{
			get
			{
				return this._ReleaseDate;
			}
			set
			{
				if ((this._ReleaseDate != value))
				{
					this.OnReleaseDateChanging(value);
					this.SendPropertyChanging();
					this._ReleaseDate = value;
					this.SendPropertyChanged("ReleaseDate");
					this.OnReleaseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumLicenses", DbType="Int")]
		public System.Nullable<int> NumLicenses
		{
			get
			{
				return this._NumLicenses;
			}
			set
			{
				if ((this._NumLicenses != value))
				{
					this.OnNumLicensesChanging(value);
					this.SendPropertyChanging();
					this._NumLicenses = value;
					this.SendPropertyChanged("NumLicenses");
					this.OnNumLicensesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableLicenses", DbType="Int")]
		public System.Nullable<int> AvailableLicenses
		{
			get
			{
				return this._AvailableLicenses;
			}
			set
			{
				if ((this._AvailableLicenses != value))
				{
					this.OnAvailableLicensesChanging(value);
					this.SendPropertyChanging();
					this._AvailableLicenses = value;
					this.SendPropertyChanged("AvailableLicenses");
					this.OnAvailableLicensesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerName", DbType="NVarChar(255)")]
		public string ComputerName
		{
			get
			{
				return this._ComputerName;
			}
			set
			{
				if ((this._ComputerName != value))
				{
					this.OnComputerNameChanging(value);
					this.SendPropertyChanging();
					this._ComputerName = value;
					this.SendPropertyChanged("ComputerName");
					this.OnComputerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientVersion", DbType="NVarChar(50)")]
		public string ClientVersion
		{
			get
			{
				return this._ClientVersion;
			}
			set
			{
				if ((this._ClientVersion != value))
				{
					this.OnClientVersionChanging(value);
					this.SendPropertyChanging();
					this._ClientVersion = value;
					this.SendPropertyChanged("ClientVersion");
					this.OnClientVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disabled", DbType="Bit")]
		public System.Nullable<bool> Disabled
		{
			get
			{
				return this._Disabled;
			}
			set
			{
				if ((this._Disabled != value))
				{
					this.OnDisabledChanging(value);
					this.SendPropertyChanging();
					this._Disabled = value;
					this.SendPropertyChanged("Disabled");
					this.OnDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserData1", DbType="NVarChar(3000)")]
		public string UserData1
		{
			get
			{
				return this._UserData1;
			}
			set
			{
				if ((this._UserData1 != value))
				{
					this.OnUserData1Changing(value);
					this.SendPropertyChanging();
					this._UserData1 = value;
					this.SendPropertyChanged("UserData1");
					this.OnUserData1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffiliateID", DbType="NVarChar(32)")]
		public string AffiliateID
		{
			get
			{
				return this._AffiliateID;
			}
			set
			{
				if ((this._AffiliateID != value))
				{
					this.OnAffiliateIDChanging(value);
					this.SendPropertyChanging();
					this._AffiliateID = value;
					this.SendPropertyChanged("AffiliateID");
					this.OnAffiliateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptID", DbType="NVarChar(50)")]
		public string ReceiptID
		{
			get
			{
				return this._ReceiptID;
			}
			set
			{
				if ((this._ReceiptID != value))
				{
					this.OnReceiptIDChanging(value);
					this.SendPropertyChanging();
					this._ReceiptID = value;
					this.SendPropertyChanged("ReceiptID");
					this.OnReceiptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderStatus", DbType="BigInt")]
		public System.Nullable<long> OrderStatus
		{
			get
			{
				return this._OrderStatus;
			}
			set
			{
				if ((this._OrderStatus != value))
				{
					this.OnOrderStatusChanging(value);
					this.SendPropertyChanging();
					this._OrderStatus = value;
					this.SendPropertyChanged("OrderStatus");
					this.OnOrderStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Log4LKG")]
	public partial class Log4LKG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Action;
		
		private string _Key;
		
		private string _ComputerID;
		
		private string _OrderNo;
		
		private string _UserName;
		
		private string _UserDomainName;
		
		private string _Comment;
		
		private System.DateTime _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnComputerIDChanging(string value);
    partial void OnComputerIDChanged();
    partial void OnOrderNoChanging(string value);
    partial void OnOrderNoChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserDomainNameChanging(string value);
    partial void OnUserDomainNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnTimeStampChanging(System.DateTime value);
    partial void OnTimeStampChanged();
    #endregion
		
		public Log4LKG()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComputerID", DbType="NVarChar(100)")]
		public string ComputerID
		{
			get
			{
				return this._ComputerID;
			}
			set
			{
				if ((this._ComputerID != value))
				{
					this.OnComputerIDChanging(value);
					this.SendPropertyChanging();
					this._ComputerID = value;
					this.SendPropertyChanged("ComputerID");
					this.OnComputerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="NVarChar(3000)")]
		public string OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserDomainName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string UserDomainName
		{
			get
			{
				return this._UserDomainName;
			}
			set
			{
				if ((this._UserDomainName != value))
				{
					this.OnUserDomainNameChanging(value);
					this.SendPropertyChanging();
					this._UserDomainName = value;
					this.SendPropertyChanged("UserDomainName");
					this.OnUserDomainNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(3000)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime NOT NULL")]
		public System.DateTime TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
