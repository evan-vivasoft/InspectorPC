
///////////////////////////////////////////////////////
// Generated by Sioux C# StateMachine Code Generator //
//                 DO NOT EDIT				         //
///////////////////////////////////////////////////////

using System.Collections.Generic;
using Inspector.Connection.EventTranslation;
using Inspector.Model.BluetoothDongle;

namespace Inspector.Connection
{
    public interface IConnectionStateMachineContext : IConnectionStateMachineCustom
    {
        EventToCallConnectionStateMachine EventToCallConnectionStateMachine { set; }
        void MessageReceivedTrigger(string data);
        void ErrorTrigger(string message, int errorCode);
        void NonFatalErrorTrigger();
        void DisconnectTrigger();
        void DisconnectedTrigger();
        void ConnectTrigger(Dictionary<string, string> connectionParameters, List<BluetoothDongleInformation> allowedBluetoothDongles);
        void ContinuousMeasurementStartedTrigger();
        void StopContinuousMeasurementTrigger();
        void MeasurementReceivedTrigger(IList<double> measurementData);
        void ContinuousMeasurementStoppedTrigger();
        void ConnectFailedTrigger(string message, int errorCode);
        void ConnectedTrigger();
        void SendCommandTrigger(Infra.DeviceCommand command, string commandParameter);
        void StartContinuousMeasurementTrigger(int measurementFrequency);
    }
}  // end namespace Connection 
